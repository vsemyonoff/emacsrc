#!/usr/bin/env bash

# Script details
SCRIPT_NAME="$(basename ${0})"

# Packages
PACKAGES=(
    clang
    cmake
    emacs
    hunspell
    npm
    python-pip
    the_silver_searcher
)
PIP_PACKAGES=(
    compiledb                      # C/C++ 'compile_commands.json' generator
    'python-language-server[all]'
)
NPM_PACKAGES=(
    typescript-language-server
    vscode-css-languageserver-bin
    vscode-html-languageserver-bin
)

# Show usage
function show_help() {
    cat << EOF
usage: ${SCRIPT_NAME} [ARGS]
    -h, --help    -- show this help and exit
    -i, --install -- install system/python/node packages
    -p, --pretend -- print commands without execution
EOF
}

# Install system/python/node packages
function install_packages () {
    if [[ ${EUID} != 0 ]]; then
        echo "root privileges required, executing sudo..."
        sudo "${0}" "${@}"
    else
        # Install system packages:
        [[ ${PACKAGES} ]] && ${PRETEND} pacman -S --needed --noconfirm ${PACKAGES[@]}
        #     ...python:
        [[ ${PIP_PACKAGES} ]] && ${PRETEND} pip install ${PIP_PACKAGES[@]}
        #     ...node.js:
        [[ ${NPM_PACKAGES} ]] && ${PRETEND} npm install -g --unsafe-perm ${NPM_PACKAGES[@]}
        # Exit script if running in 'sudo'
        [[ "${SUDO_USER}" ]] && exit 0
    fi
}

# Set default editor and extend 'PATH' variable
function install_configs() {
    mkdir -p "${HOME}/.profile.d"
    cat > "${HOME}/.profile.d/10-editor.sh" << EOF
# Set 'emacsclient' as default editor
EDITOR="emcl"
GIT_EDITOR="\${EDITOR} --no-fork"
SUDO_EDITOR="\${EDITOR} --no-fork"
export EDITOR GIT_EDITOR SUDO_EDITOR
EOF
    mkdir -p "${HOME}/.profile.d/path.d"
    cat > "${HOME}/.profile.d/path.d/emacs.conf" << EOF
\${HOME}/.emacs.d/bin
EOF
}

# Parse arguments
args=()
for arg in "${@}"; do
    case "${arg}" in
        -h|--help)
            show_help
            exit 0
            ;;
        -i|--install)
            INSTALL_PACKAGES="yes"
            args+=("${arg}")
            ;;
        -p|--pretend)
            PRETEND="echo"
            args+=("${arg}")
            ;;
        *)
            echo "error: unsupported parameter '${arg}'"
            show_help
            exit 1
            ;;
    esac
done
set -- "${args[@]}"

# Exec tasks
[[ "${INSTALL_PACKAGES}" ]] && install_packages "${@}"
install_configs
